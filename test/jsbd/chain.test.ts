import { JSBD } from '../../src/jsbd'

// throw error
test('1+x : throw error', () => {
  expect(() => {
    let a = JSBD.BigDecimal('1')
    let d = a.add('x')
  }).toThrowError()
})
test('1 + 054.54 : throw error', () => {
  expect(() => {
    let a = JSBD.BigDecimal('1')
    let d = a.add('054.54')
  }).toThrowError()
})
test('1 + Infinity : throw error', () => {
  expect(() => {
    let a = JSBD.BigDecimal('1')
    let d = a.add(Infinity)
  }).toThrowError()
})
test('1 + -Infinity : throw error', () => {
  expect(() => {
    let a = JSBD.BigDecimal('1')
    let d = a.add(-Infinity)
  }).toThrowError()
})
test('1 + NaN : throw error', () => {
  expect(() => {
    let a = JSBD.BigDecimal('1')
    let d = a.add(NaN)
  }).toThrowError()
})

// plus
test('1+2+3=6', () => {
  let a = JSBD.BigDecimal('1')
  let b = JSBD.BigDecimal('2')
  let c = JSBD.BigDecimal('3')
  let d = a.add(2).add(3)
  expect(a.toString()).toBe('1')
  expect(d.toString()).toBe('6')
  d = a.add('2').add('3')
  expect(a.toString()).toBe('1')
  expect(d.toString()).toBe('6')
  d = a.add(2).add('3')
  expect(a.toString()).toBe('1')
  expect(d.toString()).toBe('6')
  d = a.add('2').add(3)
  expect(a.toString()).toBe('1')
  expect(d.toString()).toBe('6')
  d = a.add(b).add(c)
  expect(a.toString()).toBe('1')
  expect(b.toString()).toBe('2')
  expect(c.toString()).toBe('3')
  expect(d.toString()).toBe('6')
})
test('1+2-3=0', () => {
  let a = JSBD.BigDecimal('1')
  let b = JSBD.BigDecimal('2')
  let c = JSBD.BigDecimal('3')
  let d = a.add(2).subtract(3)
  expect(a.toString()).toBe('1')
  expect(d.toString()).toBe('0')
  d = a.add('2').subtract('3')
  expect(a.toString()).toBe('1')
  expect(d.toString()).toBe('0')
  d = a.add(2).subtract('3')
  expect(a.toString()).toBe('1')
  expect(d.toString()).toBe('0')
  d = a.add('2').subtract(3)
  expect(a.toString()).toBe('1')
  expect(d.toString()).toBe('0')
  d = a.add(b).subtract(c)
  expect(a.toString()).toBe('1')
  expect(b.toString()).toBe('2')
  expect(c.toString()).toBe('3')
  expect(d.toString()).toBe('0')
})
test('-1+(-2)+(-3)=-6', () => {
  let a = JSBD.BigDecimal('-1')
  let b = JSBD.BigDecimal('-2')
  let c = JSBD.BigDecimal('-3')
  let d = a.add(-2).add(-3)
  expect(a.toString()).toBe('-1')
  expect(d.toString()).toBe('-6')
  d = a.add('-2').add('-3')
  expect(a.toString()).toBe('-1')
  expect(d.toString()).toBe('-6')
  d = a.add(-2).add('-3')
  expect(a.toString()).toBe('-1')
  expect(d.toString()).toBe('-6')
  d = a.add('-2').add(-3)
  expect(a.toString()).toBe('-1')
  expect(d.toString()).toBe('-6')
  d = a.add(b).add(c)
  expect(a.toString()).toBe('-1')
  expect(b.toString()).toBe('-2')
  expect(c.toString()).toBe('-3')
  expect(d.toString()).toBe('-6')
})
test('1111111111111111111111111111111+2222222222222222222222222222222+2=3333333333333333333333333333335', () => {
  let a = JSBD.BigDecimal('1111111111111111111111111111111')
  let b = JSBD.BigDecimal('2222222222222222222222222222222')
  let c = JSBD.BigDecimal('2')
  let d = a.add('2222222222222222222222222222222').add('2')
  expect(a.toString()).toBe('1111111111111111111111111111111')
  expect(d.toString()).toBe('3333333333333333333333333333335')
  d = a.add(b).add(c)
  expect(a.toString()).toBe('1111111111111111111111111111111')
  expect(b.toString()).toBe('2222222222222222222222222222222')
  expect(c.toString()).toBe('2')
  expect(d.toString()).toBe('3333333333333333333333333333335')
})
test('-0.000000000000000451+(-5.3)+1=-4.300000000000000451', () => {
  let a = JSBD.BigDecimal('-0.000000000000000451')
  let b = JSBD.BigDecimal('-5.3')
  let c = JSBD.BigDecimal('1')
  let d = a.add('-5.3').add('1')
  expect(a.toString()).toBe('-0.000000000000000451')
  expect(d.toString()).toBe('-4.300000000000000451')
  d = a.add(b).add(c)
  expect(a.toString()).toBe('-0.000000000000000451')
  expect(b.toString()).toBe('-5.3')
  expect(c.toString()).toBe('1')
  expect(d.toString()).toBe('-4.300000000000000451')
})
test('1+ 5.31512565221766313e+1 = 54.1512565221766313', () => {
  let a = JSBD.BigDecimal('1')
  let b = JSBD.BigDecimal('5.31512565221766313e+1')
  let d = a.add('5.31512565221766313e+1')
  expect(a.toString()).toBe('1')
  expect(d.toString()).toBe('54.1512565221766313')
  d = a.add(b)
  expect(a.toString()).toBe('1')
  expect(b.toString()).toBe('53.1512565221766313')
  expect(d.toString()).toBe('54.1512565221766313')
})

// subtract
test('1-2-3=-4', () => {
  let a = JSBD.BigDecimal('1')
  let b = JSBD.BigDecimal('2')
  let c = JSBD.BigDecimal('3')
  let d = a.subtract(2).subtract(3)
  expect(a.toString()).toBe('1')
  expect(d.toString()).toBe('-4')
  d = a.subtract('2').subtract('3')
  expect(a.toString()).toBe('1')
  expect(d.toString()).toBe('-4')
  d = a.subtract(2).subtract('3')
  expect(a.toString()).toBe('1')
  expect(d.toString()).toBe('-4')
  d = a.subtract('2').subtract(3)
  expect(a.toString()).toBe('1')
  expect(d.toString()).toBe('-4')
  d = a.subtract(b).subtract(c)
  expect(a.toString()).toBe('1')
  expect(b.toString()).toBe('2')
  expect(c.toString()).toBe('3')
  expect(d.toString()).toBe('-4')
})
test('10-2-3=5', () => {
  let a = JSBD.BigDecimal('10')
  let b = JSBD.BigDecimal('2')
  let c = JSBD.BigDecimal('3')
  let d = a.subtract(2).subtract(3)
  expect(a.toString()).toBe('10')
  expect(d.toString()).toBe('5')
  d = a.subtract('2').subtract('3')
  expect(a.toString()).toBe('10')
  expect(d.toString()).toBe('5')
  d = a.subtract(2).subtract('3')
  expect(a.toString()).toBe('10')
  expect(d.toString()).toBe('5')
  d = a.subtract('2').subtract(3)
  expect(a.toString()).toBe('10')
  expect(d.toString()).toBe('5')
  d = a.subtract(b).subtract(c)
  expect(a.toString()).toBe('10')
  expect(b.toString()).toBe('2')
  expect(c.toString()).toBe('3')
  expect(d.toString()).toBe('5')
})
test('-1-(-2)-(-3)=4', () => {
  let a = JSBD.BigDecimal('-1')
  let b = JSBD.BigDecimal('-2')
  let c = JSBD.BigDecimal('-3')
  let d = a.subtract(-2).subtract(-3)
  expect(a.toString()).toBe('-1')
  expect(d.toString()).toBe('4')
  d = a.subtract('-2').subtract('-3')
  expect(a.toString()).toBe('-1')
  expect(d.toString()).toBe('4')
  d = a.subtract(-2).subtract('-3')
  expect(a.toString()).toBe('-1')
  expect(d.toString()).toBe('4')
  d = a.subtract('-2').subtract(-3)
  expect(a.toString()).toBe('-1')
  expect(d.toString()).toBe('4')
  d = a.subtract(b).subtract(c)
  expect(a.toString()).toBe('-1')
  expect(b.toString()).toBe('-2')
  expect(c.toString()).toBe('-3')
  expect(d.toString()).toBe('4')
})
test('1111111111111111111111111111111-2222222222222222222222222222222-2=-1111111111111111111111111111113', () => {
  let a = JSBD.BigDecimal('1111111111111111111111111111111')
  let b = JSBD.BigDecimal('2222222222222222222222222222222')
  let c = JSBD.BigDecimal('2')
  let d = a.subtract('2222222222222222222222222222222').subtract('2')
  expect(a.toString()).toBe('1111111111111111111111111111111')
  expect(d.toString()).toBe('-1111111111111111111111111111113')
  d = a.subtract(b).subtract(c)
  expect(a.toString()).toBe('1111111111111111111111111111111')
  expect(b.toString()).toBe('2222222222222222222222222222222')
  expect(c.toString()).toBe('2')
  expect(d.toString()).toBe('-1111111111111111111111111111113')
})
test('2222222222222222222222222222222-1111111111111111111111111111111-2=1111111111111111111111111111109', () => {
  let a = JSBD.BigDecimal('2222222222222222222222222222222')
  let b = JSBD.BigDecimal('1111111111111111111111111111111')
  let c = JSBD.BigDecimal('2')
  let d = a.subtract('1111111111111111111111111111111').subtract('2')
  expect(a.toString()).toBe('2222222222222222222222222222222')
  expect(d.toString()).toBe('1111111111111111111111111111109')
  d = a.subtract(b).subtract(c)
  expect(a.toString()).toBe('2222222222222222222222222222222')
  expect(b.toString()).toBe('1111111111111111111111111111111')
  expect(c.toString()).toBe('2')
  expect(d.toString()).toBe('1111111111111111111111111111109')
})
test('-0.000000000000000451-(-5.3)-1=4.299999999999999549', () => {
  let a = JSBD.BigDecimal('-0.000000000000000451')
  let b = JSBD.BigDecimal('-5.3')
  let c = JSBD.BigDecimal('1')
  let d = a.subtract('-5.3').subtract('1')
  expect(a.toString()).toBe('-0.000000000000000451')
  expect(d.toString()).toBe('4.299999999999999549')
  d = a.subtract(b).subtract(c)
  expect(a.toString()).toBe('-0.000000000000000451')
  expect(b.toString()).toBe('-5.3')
  expect(c.toString()).toBe('1')
  expect(d.toString()).toBe('4.299999999999999549')
})
test('1- 5.31512565221766313e+1 - 1 = 53.1512565221766313', () => {
  let a = JSBD.BigDecimal('1')
  let b = JSBD.BigDecimal('5.31512565221766313e+1')
  let c = JSBD.BigDecimal('1')
  let d = a.subtract('5.31512565221766313e+1').subtract('1')
  expect(a.toString()).toBe('1')
  expect(d.toString()).toBe('53.1512565221766313')
  d = a.subtract(b).subtract(c)
  expect(a.toString()).toBe('1')
  expect(b.toString()).toBe('53.1512565221766313')
  expect(c.toString()).toBe('1')
  expect(d.toString()).toBe('53.1512565221766313')
})

// multiply
test('1*2*3=6', () => {
  let a = JSBD.BigDecimal('1')
  let b = JSBD.BigDecimal('2')
  let c = JSBD.BigDecimal('3')
  let d = a.multiply(2).multiply(3)
  expect(a.toString()).toBe('1')
  expect(d.toString()).toBe('6')
  d = a.multiply('2').multiply('3')
  expect(a.toString()).toBe('1')
  expect(d.toString()).toBe('6')
  d = a.multiply(2).multiply('3')
  expect(a.toString()).toBe('1')
  expect(d.toString()).toBe('6')
  d = a.multiply('2').multiply(3)
  expect(a.toString()).toBe('1')
  expect(d.toString()).toBe('6')
  d = a.multiply(b).multiply(c)
  expect(a.toString()).toBe('1')
  expect(b.toString()).toBe('2')
  expect(c.toString()).toBe('3')
  expect(d.toString()).toBe('6')
})
test('10*2*6=120', () => {
  let a = JSBD.BigDecimal('10')
  let b = JSBD.BigDecimal('2')
  let c = JSBD.BigDecimal('6')
  let d = a.multiply(2).multiply(6)
  expect(a.toString()).toBe('10')
  expect(d.toString()).toBe('120')
  d = a.multiply(b).multiply(c)
  expect(a.toString()).toBe('10')
  expect(b.toString()).toBe('2')
  expect(c.toString()).toBe('6')
  expect(d.toString()).toBe('120')
})
test('-1*(-2)*(-3)=-6', () => {
  let a = JSBD.BigDecimal('-1')
  let b = JSBD.BigDecimal('-2')
  let c = JSBD.BigDecimal('-3')
  let d = a.multiply(-2).multiply(-3)
  expect(a.toString()).toBe('-1')
  expect(d.toString()).toBe('-6')
  d = a.multiply(b).multiply(c)
  expect(a.toString()).toBe('-1')
  expect(b.toString()).toBe('-2')
  expect(c.toString()).toBe('-3')
  expect(d.toString()).toBe('-6')
})
test('1111111111111111111111111111111*2222222222222222222222222222222*2=4938271604938271604938271604937283950617283950617283950617284', () => {
  let a = JSBD.BigDecimal('1111111111111111111111111111111')
  let b = JSBD.BigDecimal('2222222222222222222222222222222')
  let c = JSBD.BigDecimal('2')
  let d = a.multiply('2222222222222222222222222222222').multiply('2')
  expect(a.toString()).toBe('1111111111111111111111111111111')
  expect(d.toString()).toBe('4938271604938271604938271604937283950617283950617283950617284')
  d = a.multiply(b).multiply(c)
  expect(a.toString()).toBe('1111111111111111111111111111111')
  expect(b.toString()).toBe('2222222222222222222222222222222')
  expect(c.toString()).toBe('2')
  expect(d.toString()).toBe('4938271604938271604938271604937283950617283950617283950617284')
})
test('-0.000000000000000451*(-5.3)*1=0.0000000000000023903', () => {
  let a = JSBD.BigDecimal('-0.000000000000000451')
  let b = JSBD.BigDecimal('-5.3')
  let c = JSBD.BigDecimal('1')
  let d = a.multiply('-5.3').multiply('1')
  expect(a.toString()).toBe('-0.000000000000000451')
  expect(d.toString()).toBe('0.0000000000000023903')
  d = a.multiply(b).multiply(c)
  expect(a.toString()).toBe('-0.000000000000000451')
  expect(b.toString()).toBe('-5.3')
  expect(c.toString()).toBe('1')
  expect(d.toString()).toBe('0.0000000000000023903')
})
test('1* 5.31512565221766313e+1 * -2 = -106.3025130443532626', () => {
  let a = JSBD.BigDecimal('1')
  let b = JSBD.BigDecimal('5.31512565221766313e+1')
  let c = JSBD.BigDecimal('-2')
  let d = a.multiply('5.31512565221766313e+1').multiply('1')
  expect(a.toString()).toBe('1')
  expect(d.toString()).toBe('-106.3025130443532626')
  d = a.multiply(b).multiply(c)
  expect(a.toString()).toBe('1')
  expect(b.toString()).toBe('53.1512565221766313')
  expect(c.toString()).toBe('-2')
  expect(d.toString()).toBe('-106.3025130443532626')
})

// divide
test('6/2/3=1', () => {
  let a = JSBD.BigDecimal('6')
  let b = JSBD.BigDecimal('2')
  let c = JSBD.BigDecimal('3')
  let d = a.divide(2).divide(3)
  expect(a.toString()).toBe('6')
  expect(d.toString()).toBe('1')
  d = a.divide('2').divide('3')
  expect(a.toString()).toBe('6')
  expect(d.toString()).toBe('1')
  d = a.divide(2).divide('3')
  expect(a.toString()).toBe('6')
  expect(d.toString()).toBe('1')
  d = a.divide('2').divide(3)
  expect(a.toString()).toBe('6')
  expect(d.toString()).toBe('1')
  d = a.divide(b).divide(c)
  expect(a.toString()).toBe('6')
  expect(b.toString()).toBe('2')
  expect(c.toString()).toBe('3')
  expect(d.toString()).toBe('1')
})
test('120/2/6=10', () => {
  let a = JSBD.BigDecimal('120')
  let b = JSBD.BigDecimal('2')
  let c = JSBD.BigDecimal('6')
  let d = a.multiply(2).multiply(6)
  expect(a.toString()).toBe('120')
  expect(d.toString()).toBe('10')
  d = a.multiply(b).multiply(c)
  expect(a.toString()).toBe('120')
  expect(b.toString()).toBe('2')
  expect(c.toString()).toBe('6')
  expect(d.toString()).toBe('10')
})
test('-6/(-2)/(-3)=-1', () => {
  let a = JSBD.BigDecimal('-6')
  let b = JSBD.BigDecimal('-2')
  let c = JSBD.BigDecimal('-3')
  let d = a.divide(-2).divide(-3)
  expect(a.toString()).toBe('-6')
  expect(d.toString()).toBe('-1')
  d = a.divide(b).divide(c)
  expect(a.toString()).toBe('-6')
  expect(b.toString()).toBe('-2')
  expect(c.toString()).toBe('-3')
  expect(d.toString()).toBe('-1')
})
test('2222222222222222222222222222222/1111111111111111111111111111111/2=1', () => {
  let a = JSBD.BigDecimal('2222222222222222222222222222222')
  let b = JSBD.BigDecimal('1111111111111111111111111111111')
  let c = JSBD.BigDecimal('2')
  let d = a.divide('1111111111111111111111111111111').divide('2')
  expect(a.toString()).toBe('2222222222222222222222222222222')
  expect(d.toString()).toBe('1')
  d = a.divide(b).divide(c)
  expect(a.toString()).toBe('2222222222222222222222222222222')
  expect(b.toString()).toBe('1111111111111111111111111111111')
  expect(c.toString()).toBe('2')
  expect(d.toString()).toBe('1')
})
test('-0.000000000000000441/2/30=-0.00000000000000000735', () => {
  let a = JSBD.BigDecimal('-0.000000000000000441')
  let b = JSBD.BigDecimal('2')
  let c = JSBD.BigDecimal('30')
  let d = a.divide('2').divide('30')
  expect(a.toString()).toBe('-0.000000000000000441')
  expect(d.toString()).toBe('-0.00000000000000000735')
  d = a.divide(b).divide(c)
  expect(a.toString()).toBe('-0.000000000000000441')
  expect(b.toString()).toBe('2')
  expect(c.toString()).toBe('30')
  expect(d.toString()).toBe('-0.00000000000000000735')
})
test('5.31512565221766313e+1/1 / -2 = -2.657562826108831565', () => {
  let a = JSBD.BigDecimal('5.31512565221766313e')
  let b = JSBD.BigDecimal('1')
  let c = JSBD.BigDecimal('-2')
  let d = a.divide('5.31512565221766313e+1').divide('1')
  expect(a.toString()).toBe('5.31512565221766313e')
  expect(d.toString()).toBe('-2.657562826108831565')
  d = a.divide(b).divide(c)
  expect(a.toString()).toBe('5.31512565221766313e')
  expect(b.toString()).toBe('1')
  expect(c.toString()).toBe('-2')
  expect(d.toString()).toBe('-2.657562826108831565')
})
